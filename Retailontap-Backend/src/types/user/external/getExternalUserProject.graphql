scalar Date

type Status {
    id:Int,
    name:String
}

type Organisation {
    id:Int,
    name:String
}

type Creator {
    id:Int,
    first_name:String,
    last_name:String,
    organisation:[Organisation]
}

type Supplier {
    id:Int,
    first_name:String,
    last_name:String,
    organisation:[Organisation]
}

type ProjectSupplier {
    id: Int,
    project_id: Int,
    supplier_id: Int,
    status_id:Int,
    projectstatus:Status,
    supplier:Supplier   
}

type ProjectData {
    id: Int,
    name: String,
    description: String,
    notes: String,
    start_date: Date,
    end_date: Date,
    unit_cost: String,
    markup: String,
    retail_price: String,
    budget: String,   
    creator:Creator,
    projectsuppliers:[ProjectSupplier]   
}

type ProjectDetails {
    sample_requested:Int,
    sample_received:Int,
    quotation_requested:Int,
    quotation_received:Int,
    order_requested:Int,
    order_received:Int,   
    projects:[ProjectData]
}

type GetProjectDetails {
  path: String!
  message: String!,
  code: Int!,
  errors: String,
  projectdetails: ProjectDetails
}

type Mutation {
    externalUserProjectDetails(
        id: Int,
    ): GetProjectDetails @isAuth
}