type ProjectImage {
    id: Int,
    thumbnail: String,
}
type ProjectConversationUser {
    id: Int,
    first_name: String,
    last_name: String,
    work_email: String,
    image: ProfileImage
}
type ProjectConversation {
    id: Int,
    name: String,
    descriprion: String,
    channel_id: String,
    network: String,
    method: String,
    supplier_id: String,
    created_by: Int,
    project_id: Int,
    participants: [ProjectConversationUser],
}
type Project {
    id: Int,
    name: String,
    description: String,
    notes: String,
    start_date: String,
    end_date: String,
    unit_cost: String,
    markup: String,
    retail_price: String,
    budget: String,
    conversations: [ProjectConversation],
    hashtags: [Hashtag],
    images: [ProjectImage],
}

type ProjectConversationsResponse{
    path: String!
    message: String!,
    code: Int!,
    errors: String,
    project: Project
}

type Mutation {
    projectConversations(
        id: Int,
    ): ProjectConversationsResponse  @isAuth @hasRole(roles: [Owner, Administrator]) @hasType(types: [retailer])
}